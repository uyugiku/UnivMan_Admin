// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.univman.studentm;

import com.univman.studentm.Studentm;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Studentm_Roo_Finder {

    public static Long Studentm.countFindStudentmsByNameLikeAndMailLike(String name, String mail) {
    	if (name == null  || name.length() == 0) {
        	name="%";
        }else{
        	 name = name.replace('*', '%');
             if (name.charAt(0) != '%') {
                 name = "%" + name;
             }
             if (name.charAt(name.length() - 1) != '%') {
                 name = name + "%";
             }
        }

        if (mail == null || mail.length() == 0){
        	mail="%";
        }else{
        	  mail = mail.replace('*', '%');
              if (mail.charAt(0) != '%') {
                  mail = "%" + mail;
              }
              if (mail.charAt(mail.length() - 1) != '%') {
                  mail = mail + "%";
              }
        }
        EntityManager em = Studentm.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Studentm AS o WHERE o.finished = false AND LOWER(o.name) LIKE LOWER(:name) AND LOWER(o.mail) LIKE LOWER(:mail)", Long.class);
        q.setParameter("name", name);
        q.setParameter("mail", mail);
        return ((Long) q.getSingleResult());
    }

    public static TypedQuery<Studentm> Studentm.findStudentmsByNameLikeAndMailLike(String name, String mail) {
    	if (name == null  || name.length() == 0) {
        	name="%%";
        }else{
        	 name = name.replace('*', '%');
             if (name.charAt(0) != '%') {
                 name = "%" + name;
             }
             if (name.charAt(name.length() - 1) != '%') {
                 name = name + "%";
             }
        }

        if (mail == null || mail.length() == 0){
        	mail="%%";
        }else{
        	  mail = mail.replace('*', '%');
              if (mail.charAt(0) != '%') {
                  mail = "%" + mail;
              }
              if (mail.charAt(mail.length() - 1) != '%') {
                  mail = mail + "%";
              }
        }
        EntityManager em = Studentm.entityManager();
        TypedQuery<Studentm> q = em.createQuery("SELECT o FROM Studentm AS o WHERE o.finished = false AND LOWER(o.name) LIKE LOWER(:name)  AND LOWER(o.mail) LIKE LOWER(:mail)", Studentm.class);
        q.setParameter("name", name);
        q.setParameter("mail", mail);
        return q;
    }

    public static TypedQuery<Studentm> Studentm.findStudentmsByNameLikeAndMailLike(String name, String mail, String sortFieldName, String sortOrder) {
        if (name == null  || name.length() == 0) {
        	name="%%";
        }else{
        	 name = name.replace('*', '%');
             if (name.charAt(0) != '%') {
                 name = "%" + name;
             }
             if (name.charAt(name.length() - 1) != '%') {
                 name = name + "%";
             }
        }

        if (mail == null || mail.length() == 0){
        	mail="%%";
        }else{
        	  mail = mail.replace('*', '%');
              if (mail.charAt(0) != '%') {
                  mail = "%" + mail;
              }
              if (mail.charAt(mail.length() - 1) != '%') {
                  mail = mail + "%";
              }
        }

        EntityManager em = Studentm.entityManager();
        String jpaQuery = "SELECT o FROM Studentm AS o WHERE o.finished = false AND LOWER(o.name) LIKE LOWER(:name)  AND LOWER(o.mail) LIKE LOWER(:mail)";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<Studentm> q = em.createQuery(jpaQuery, Studentm.class);
        q.setParameter("name", name);
        q.setParameter("mail", mail);
        return q;
    }

}
